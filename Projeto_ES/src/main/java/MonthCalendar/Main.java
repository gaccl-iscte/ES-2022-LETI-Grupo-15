
package MonthCalendar;

import java.util.ArrayList;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;

import Calendar.CalendarEvent;

/**
 * The Class Main.
 */
public class Main extends javax.swing.JFrame {

	/** The main product. */
	private MainProduct mainProduct = new MainProduct();

	/** The list of events. */
	static ArrayList<CalendarEvent> eventos;
	
	/** The list of names. */
	static ArrayList<String> nomes;
	
    /**
     * Creates new form Main.
     *
     * @param eventos the list of events
     * @param nomes the list of names
     */
    public Main(ArrayList<CalendarEvent> eventos, ArrayList<String> nomes) {
    	Main.eventos = eventos;
    	Main.nomes = nomes;
        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        GroupLayout jPanel1Layout = mainProduct.jPanel1Layout(this);

        ImageIcon image = new ImageIcon("iscte_logo.png");
		this.setIconImage(image.getImage());
        this.setResizable(false);
        this.setTitle("Month Calendar");
        
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }

	/**
     * The main method.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main(eventos, nomes).setVisible(true);
            }
        });
    }

    /** The JPanel jPanel1. */
    private javax.swing.JPanel jPanel1;

	/**
     * Sets the JPanel jPanel1.
     *
     * @param jPanel1 the new JPanel jPanel1
     */
    public void setJPanel1(javax.swing.JPanel jPanel1) {
		this.jPanel1 = jPanel1;
	}

	/**
	 * Gets the JPanel jPanel1.
	 *
	 * @return the JPanel jPanel1
	 */
	public javax.swing.JPanel getJPanel1() {
		return jPanel1;
	}
}
